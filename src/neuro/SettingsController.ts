import { AppDataSource } from "../data-source";
import { User } from "../entity/User";
import { Btn } from "./utils";
import { SupportedModels } from "../utils/Models";
import { Bot } from "./Bot";
import { OutputFormat } from "../utils/OutputFormat";

let map: Map<string, string> = new Map();
map.set(
  "gpt-4o-mini",
  `
  GPT-4 Omni Mini ‚Äì —ç—Ç–æ —É–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è GPT-4, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª—è –∑–∞–¥–∞—á —Å —É–º–µ—Ä–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π. –û–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ –∏ —Ç—Ä–µ–±—É–µ—Ç –º–µ–Ω—å—à–µ —Ä–µ—Å—É—Ä—Å–æ–≤, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–µ –∏–¥–µ–∞–ª—å–Ω–æ–π –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.  
–ú–æ–¥–µ–ª—å –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤, –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ—â—å—é –≤ –æ–±—É—á–µ–Ω–∏–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–π –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏, GPT-4 Omni Mini –ª–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–º–∏ –º–æ—â–Ω–æ—Å—Ç—è–º–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∏–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –∫–∞—á–µ—Å—Ç–≤–æ–º –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é.
GPT-4 Omni mini
- –£–º: üü¢üü¢üü¢üü°üü° (3)
- –°–∫–æ—Ä–æ—Å—Ç—å: üü¢üü¢üü¢üü¢üü° (4)
- –¶–µ–Ω–∞: üü¢üü°üü°üü°üü° (1)`,
);
map.set(
  "gpt-4-turbo",
  `
  GPT-4 Turbo ‚Äì —ç—Ç–æ —É—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è GPT-4, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –≥–¥–µ –≤–∞–∂–Ω–∞ –º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–∫–ª–∏–∫–∞. –ú–æ–¥–µ–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±—ã—Å—Ç—Ä—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–µ –∏–¥–µ–∞–ª—å–Ω–æ–π –¥–ª—è —á–∞—Ç-–±–æ—Ç–æ–≤, –≥–æ–ª–æ—Å–æ–≤—ã—Ö –ø–æ–º–æ—â–Ω–∏–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Ä–µ—à–µ–Ω–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.  
–û–Ω–∞ –æ—Å–æ–±–µ–Ω–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö, —Ç—Ä–µ–±—É—é—â–∏—Ö –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: –æ–Ω–ª–∞–π–Ω-–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤, –∏–≥—Ä–æ–≤–æ–π –ò–ò –∏–ª–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π. GPT-4 Turbo –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–∞–∂–µ –ø—Ä–∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–º–æ–≥–∞—è –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫.

- –£–º: üü¢üü¢üü¢üü¢üü° (4)
- –°–∫–æ—Ä–æ—Å—Ç—å: üü¢üü¢üü¢üü¢üü¢ (5)
- –¶–µ–Ω–∞: üü¢üü°üü°üü°üü° (1)
  `,
);
map.set(
  "gpt-4o",
  `
GPT-4 Omni ‚Äì —ç—Ç–æ –≤–µ—Ä—Å–∏—è GPT-4, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –º—É–ª—å—Ç–∏–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏. –û–Ω–∞ —Å–ø–æ—Å–æ–±–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–∞–º—ã–º–∏ —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–¥–∞—á–∞–º–∏: –æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ —Ä–µ—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á.  
–ú–æ–¥–µ–ª—å –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ –ª—é–±—ã–º —Å—Ñ–µ—Ä–∞–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è ‚Äì –±—É–¥—å —Ç–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. GPT-4 Omni —Å—Ç–∞–Ω–µ—Ç –≤–∞—à–∏–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Å–∞–º—ã–º–∏ —Å–ª–æ–∂–Ω—ã–º–∏ –≤—ã–∑–æ–≤–∞–º–∏.
GPT-4 Omni
- –£–º: üü¢üü¢üü¢üü¢üü¢ (5)
- –°–∫–æ—Ä–æ—Å—Ç—å: üü¢üü¢üü¢üü¢üü° (4)
- –¶–µ–Ω–∞: üü¢üü°üü°üü°üü° (1)
  `,
);
map.set(
  "gpt-4.1",
  `
  –ü–µ—Ä–µ–¥–æ–≤–∞—è –º–æ–¥–µ–ª—å GPT –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á
  - –£–º: üü¢üü¢üü¢üü¢üü¢ (5)
  - –°–∫–æ—Ä–æ—Å—Ç—å: üü¢üü¢üü¢üü¢üü° (4)
  - –¶–µ–Ω–∞: üü¢üü¢üü¢üü°üü° (3)
  `,
);
map.set(
  "o4-mini",
  `–ë—é–¥–∂–µ—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è OpenAI O4, –∑–∞—Ç–æ—á–µ–Ω–Ω–∞—è –ø–æ–¥ –≥–ª—É–±–∏–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ.
  - –£–º: üü¢üü¢üü¢üü¢üü¢ (5)
  - –°–∫–æ—Ä–æ—Å—Ç—å: üü¢üü¢üü¢üü°üü° (4)
  - –¶–µ–Ω–∞: üü¢üü¢üü¢üü¢üü° (4)
  `,
);

const manager = AppDataSource.manager;

export class SettingsController {
  constructor(private bot: Bot) {
    this.bot.onSettings(this.settings.bind(this));
    this.bot.onSetting(this.setting.bind(this));
    this.bot.onModel(this.model.bind(this));
    this.bot.onCount(this.count.bind(this));
    this.bot.onFormat(this.format.bind(this));
  }

  private async settings(user: User) {
    await this.bot.bot.sendMessage(+user.chatId, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è", {
      reply_markup: {
        inline_keyboard: [
          Btn("–ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å", "settings-model"),
          Btn("–ü–æ–¥—Å—á–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤", "settings-count"),
          Btn("–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞", "settings-format"),
        ],
      },
    });
  }

  private async setting(user: User, setting: string) {
    if (setting === "model") {
      await this.bot.bot.sendMessage(
        +user.chatId,
        `–í—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: ${user.model}\n${map.get(user.model)}\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:`,
        {
          reply_markup: {
            inline_keyboard: [
              Btn(
                `GPT 4 Omni mini ${user.model === "gpt-4o-mini" ? "‚úÖ" : ""}`,
                "model-gpt-4o-mini",
              ),
              Btn(
                `GPT 4 Omni ${user.model === "gpt-4o" ? "‚úÖ" : ""}`,
                "model-gpt-4o",
              ),
              Btn(
                `GPT 4 Turbo ${user.model === "gpt-4-turbo" ? "‚úÖ" : ""}`,
                "model-gpt-4-turbo",
              ),
              Btn(
                `OpenAI o4 mini ${user.model === "o4-mini" ? "‚úÖ" : ""}`,
                "model-o4-mini",
              ),
              Btn(
                `GPT 4.1 ${user.model === "gpt-4.1" ? "‚úÖ" : ""}`,
                "model-gpt-4.1",
              ),
              Btn("–ù–∞–∑–∞–¥", "settings"),
            ],
          },
        },
      );
    } else if (setting === "count") {
      await this.bot.bot.sendMessage(
        +user.chatId,
        `üìä –ü–æ–¥—Å—á—ë—Ç —Ç–æ–∫–µ–Ω–æ–≤ ‚Äî —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤—ã —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é. –í –ø–æ–¥—Å—á—ë—Ç–µ —Ç–æ–∫–µ–Ω–æ–≤ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤–∞—à –∑–∞–ø—Ä–æ—Å, –æ—Ç–≤–µ—Ç –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—â–µ–Ω–∏—è (–ø–∞–º—è—Ç—å).\n–í–æ—Ç –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n\n‚úÖ –í–∫–ª—é—á–∏—Ç—å - –í—ã –±—É–¥–µ—Ç–µ –≤–∏–¥–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ —Å–º–æ–∂–µ—Ç–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å–≤–æ–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤ –≤ –¥–∏–∞–ª–æ–≥–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç.\n\n‚úñÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å - –í—ã –Ω–µ –±—É–¥–µ—Ç–µ –≤–∏–¥–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –±–æ–ª–µ–µ —á–∏—Å—Ç—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏ –Ω–µ —Ö–æ—á–µ—Ç –æ—Ç–≤–ª–µ–∫–∞—Ç—å—Å—è –Ω–∞ –ø–æ–¥—Å—á—ë—Ç —Ç–æ–∫–µ–Ω–æ–≤ –≤–æ –≤—Ä–µ–º—è –æ–±—â–µ–Ω–∏—è.`,
        {
          reply_markup: {
            inline_keyboard: [
              Btn(
                user.countTokens ? "‚úñÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å" : "‚úÖ –í–∫–ª—é—á–∏—Ç—å",
                "toggle-count",
              ),
              Btn("–ù–∞–∑–∞–¥", "settings"),
            ],
          },
        },
      );
    } else if (setting === "format") {
      await this.bot.bot.sendMessage(+user.chatId, `–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:`, {
        reply_markup: {
          inline_keyboard: [
            Btn(
              `–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (—Ç–µ–∫—Å—Ç –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç html) ${user.outputFormat === "text" ? "‚úÖ" : ""}`,
              "format-text",
            ),
            Btn(
              `HTML ${user.outputFormat === "html" ? "‚úÖ" : ""}`,
              "format-html",
            ),
            Btn(
              `–î–æ–∫—É–º–µ–Ω—Ç Word ${user.outputFormat === "docx" ? "‚úÖ" : ""}`,
              "format-docx",
            ),
            Btn(
              `–ê—É–¥–∏–æ ${user.outputFormat === "audio" ? "‚úÖ" : ""}`,
              "format-audio",
            ),
          ],
        },
      });
    }
  }

  private async model(user: User, model: string) {
    user.model = model as SupportedModels;
    await manager.save(user);
    await this.bot.bot.sendMessage(+user.chatId, "–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞", {
      reply_markup: {
        inline_keyboard: user.agentId ? [] : [Btn("–ù–∞–∑–∞–¥", "settings")],
      },
    });
  }

  private async count(user: User) {
    user.countTokens = !user.countTokens;
    await manager.save(user);
    await this.bot.bot.sendMessage(
      +user.chatId,
      `–ü–æ–¥—Å—á–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤ ${user.countTokens ? "–≤–∫–ª—é—á–µ–Ω" : "–≤—ã–∫–ª—é—á–µ–Ω"}`,
      {
        reply_markup: {
          inline_keyboard: [
            Btn(
              user.countTokens ? "‚úñÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å" : "‚úÖ –í–∫–ª—é—á–∏—Ç—å",
              "toggle-count",
            ),
            Btn("–ù–∞–∑–∞–¥", "settings"),
          ],
        },
      },
    );
  }

  private async format(user: User, format: string) {
    const f = format as OutputFormat;
    user.outputFormat = f;
    await manager.save(user);
    await this.bot.bot.sendMessage(
      +user.chatId,
      `–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${f}`,
      {
        reply_markup: {
          inline_keyboard: [Btn("–ù–∞–∑–∞–¥", "settings")],
        },
      },
    );
  }
}
