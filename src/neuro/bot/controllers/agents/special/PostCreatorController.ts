import { InlineKeyboardButton } from "node-telegram-bot-api";
import { AppDataSource } from "../../../../../data-source";
import { AgentModel } from "../../../../../entity/assistants/AgentModel";
import { User } from "../../../../../entity/User";
import { Bot } from "../../../../Bot";
import { Btn } from "../../../../utils";
import { IController } from "../../../Controller";
import { ModelController } from "../ModelController";
import { Conversation } from "../../../../../entity/Conversation";
import { ConversationController } from "../conversations/ConversationController";
import { DataController } from "../DataController";

const manager = AppDataSource.manager;

export class PostCreatorController implements IController {
  private readonly _id = 3;
  private readonly _firstMessage =
    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!üëã –Ø AI —Å–æ—Å—Ç–∞–≤–∏—Ç–µ–ª—å –ø–æ—Å—Ç–æ–≤. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ—Å—Ç–æ–≤.\n–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç, –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å —Ç–∏–ø–æ–º, –∞ –ø–æ—Ç–æ–º —Å–æ —Å—Ç–∏–ª–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –≤—ã–±–∏—Ä–∞–π –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µüëá\n\n–ù–µ –∑–Ω–∞–µ—à—å –∫–∞–∫–æ–π –≤—ã–±—Ä–∞—Ç—å? –°–º–æ—Ç—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç: https://docs.google.com/document/d/1Eh5FZzDEh6_ErGL1BHk0U-_8YxejNrFBPsrOYOB7Fko/edit";
  private readonly _secondMessage = "";

  constructor(
    private bot: Bot,
    private modelController: ModelController,
    private conversationController: ConversationController,
    private dataController: DataController,
  ) {}

  public bind() {}

  private async onTypes(user: User) {
    await this.dataController.resetData(user);
    user.agent = new AgentModel();
    user.agent.id = this._id;

    await manager.save(user);

    await this.bot.bot.sendMessage(+user.chatId, this._firstMessage, {
      reply_markup: {
        inline_keyboard: [
          Btn(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π`, `posttype-–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π`),
          Btn(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π`, `posttype-–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π`),
          Btn(`–ü–æ–ª–µ–∑–Ω—ã–π`, `posttype-–ü–æ–ª–µ–∑–Ω—ã–π`),
        ],
      },
    });
  }

  private async onType(user: User, type: string) {
    user.dialogueData += `–¢–∏–ø –ø–æ—Å—Ç–∞: ${type}\n`;
    await manager.save(user);

    await this.bot.bot.sendMessage(+user.chatId, this._secondMessage, {
      reply_markup: {
        inline_keyboard: [
          Btn(`–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π`, `poststyle-–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π`),
          Btn(`–î–µ–ª–æ–≤–æ–π`, `poststyle-–î–µ–ª–æ–≤–æ–π`),
          Btn(`–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π`, `poststyle-–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π`),
          Btn(`–û–±—É—á–∞—é—â–∏–π`, `poststyle-–û–±—É—á–∞—é—â–∏–π`),
          Btn(`–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π`, `poststyle-–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π`),
          Btn(`–ù–∞—É—á–Ω—ã–π`, `poststyle-–ù–∞—É—á–Ω—ã–π`),
          Btn(`–†–µ–∫–ª–∞–º–Ω—ã–π`, `poststyle-–†–µ–∫–ª–∞–º–Ω—ã–π`),
          Btn(`–í—ã–∑—ã–≤–∞—é—â–∏–π`, `poststyle-–í—ã–∑—ã–≤–∞—é—â–∏–π`),
          Btn(`–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å—Ç–∏–ª–∏`, "poststyles-confirm"),
          Btn(`–û—Ç–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª–∏`, "poststyles-reject"),
        ],
      },
    });
  }

  private async onStyle(user: User, style: string, msgId: number) {
    if (user.dialogueData.includes(style)) {
      const split = user.dialogueData.split("\n");
      user.dialogueData = split.filter((el) => !el.includes(style)).join("\n");
    } else {
      user.dialogueData += `–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: ${style}\n`;
    }
    await manager.save(user);

    await this.bot.bot.deleteMessage(+user.chatId, msgId);
    await this.bot.bot.sendMessage(+user.chatId, this._secondMessage, {
      reply_markup: {
        inline_keyboard: this.getButtons(user),
      },
    });
  }

  private async onRejectStyles(user: User) {
    user.dialogueData = user.dialogueData
      .split("\n")
      .filter((el) => !el.includes("–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞:"))
      .join("\n");

    await this.bot.bot.sendMessage(+user.chatId, this._secondMessage, {
      reply_markup: {
        inline_keyboard: this.getButtons(user),
      },
    });
  }

  private async onConfirmStyles(user: User) {
    await this.conversationController.markAllAsInactive(user);
    const conversation = new Conversation();
    conversation.agent = user.agent!;
    conversation.user = user;
    conversation.api = user.model.api;
    await manager.save(conversation);

    await this.bot.bot.sendMessage(
      +user.chatId,
      this.getThirdMessage(user.dialogueData),
    );

    await this.modelController.sendSelectAPI(+user.chatId);
  }

  private getThirdMessage(styles: string): string {
    return `üöÄ–°—É–ø–µ—Ä, —Å–æ —Å—Ç–∏–ª–µ–º –∏ —Ç–∏–ø–æ–º –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å:\n${styles}\n–ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç, –ø—Ä–∏—à–ª–∏ –º–Ω–µ –≤–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å—Ç–∞:\n1)–¢–µ–º–∞ –ø–æ—Å—Ç–∞ \n2)–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è (–î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ—Å—Ç)\n3)–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ï—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª(–∞) –±—ã –∑–∞—Ç—Ä–æ–Ω—É—Ç—å –≤ –ø–æ—Å—Ç–µ)\n4)–¶–µ–ª—å –ø–æ—Å—Ç–∞ (–ö–∞–∫–∞—è —Ü–µ–ª—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞: –ü—Ä–æ–¥–∞–∂–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –±–∏–∑–Ω–µ—Å–∞; —Å–æ–æ–±—â–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å‚Ä¶)\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–∏—à–ª–∏ –º–Ω–µ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏) \n–û–∂–∏–¥–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é)üòâ`;
  }

  private getButtons(user: User): InlineKeyboardButton[][] {
    return [
      Btn(
        `–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π`,
      ),
      Btn(
        `–î–µ–ª–æ–≤–æ–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –î–µ–ª–æ–≤–æ–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–î–µ–ª–æ–≤–æ–π`,
      ),
      Btn(
        `–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π`,
      ),
      Btn(
        `–û–±—É—á–∞—é—â–∏–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –û–±—É—á–∞—é—â–∏–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–û–±—É—á–∞—é—â–∏–π`,
      ),
      Btn(
        `–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π`,
      ),
      Btn(
        `–ù–∞—É—á–Ω—ã–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –ù–∞—É—á–Ω—ã–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–ù–∞—É—á–Ω—ã–π`,
      ),
      Btn(
        `–†–µ–∫–ª–∞–º–Ω—ã–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –†–µ–∫–ª–∞–º–Ω—ã–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–†–µ–∫–ª–∞–º–Ω—ã–π`,
      ),
      Btn(
        `–í—ã–∑—ã–≤–∞—é—â–∏–π ${user.dialogueData.includes(`–°—Ç–∏–ª—å –ø–æ—Å—Ç–∞: –í—ã–∑—ã–≤–∞—é—â–∏–π\n`) ? "‚úÖ" : ""}`,
        `poststyle-–í—ã–∑—ã–≤–∞—é—â–∏–π`,
      ),
      Btn(`–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å—Ç–∏–ª–∏`, "poststyles-confirm"),
      Btn(`–û—Ç–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª–∏`, "poststyles-reject"),
    ];
  }
}
