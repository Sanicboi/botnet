import { AppDataSource } from "../../data-source";
import { User } from "../../entity/User";
import { Btn } from "../../neuro/utils";
import { wait } from "../../utils/wait";
import { Bot } from "../Bot";
import { DialogController } from "../DialogController";

const manager = AppDataSource.manager;

export class OfferAgent {
  constructor(
    private bot: Bot,
    private dialogController: DialogController,
  ) {
    this.bot.onOfferSizes(this.sizes.bind(this));
    this.bot.onOfferSize(this.size.bind(this));
    this.bot.onOfferModel(this.model.bind(this));
  }

  private async sizes(user: User) {
    user.agentId = 2;
    user.agent!.id = 2;
    await manager.save(user);
    await this.bot.bot.sendMessage(+user.chatId, `–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –æ—Ñ—Ñ–µ—Ä–∞`, {
      reply_markup: {
        inline_keyboard: [
          Btn(`–ë–æ–ª—å—à–æ–π (120-150 —Å–ª–æ–≤)`, `offersize-–±–æ–ª—å—à–æ–π (70-90 —Å–ª–æ–≤)`),
          Btn(`–°—Ä–µ–¥–Ω–∏–π (90-120 —Å–ª–æ–≤)`, `offersize-c—Ä–µ–¥–Ω–∏–π (90-120 —Å–ª–æ–≤)`),
          Btn(`–ú–∞–ª–µ–Ω—å–∫–∏–π (60-90 —Å–ª–æ–≤)`, `offersize-–º–∞–ª–µ–Ω—å–∫–∏–π (60-90 —Å–ª–æ–≤)`),
        ],
      },
    });
  }

  private async size(user: User, size: string) {
    user.dialogueData += `–†–∞–∑–º–µ—Ä –æ—Ñ—Ñ–µ—Ä–∞: ${size}\n`;
    await manager.save(user);
    await this.bot.bot.sendMessage(
      +user.chatId,
      `–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞ –¥–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –º–æ–¥–µ–ª—å—é!\n–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –º–æ–¥–µ–ª—å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëá\n–ù–µ –∑–Ω–∞–µ—à—å –∫–∞–∫—É—é –≤—ã–±—Ä–∞—Ç—å? –°–º–æ—Ç—Ä–∏ [—Å–ø—Ä–∞–≤–∫—É](https://docs.google.com/document/d/1785aqFyeHDYV3QjfJwpA4TC-K1UjScqRRDsQoFk7Uy8/edit)`,
      {
        reply_markup: {
          inline_keyboard: [
            Btn(`AIDA`, `offermodel-AIDA`),
            Btn(`PAS`, `offermodel-PAS`),
            Btn(`FAB`, `offermodel-FAB`),
            Btn(`4Ps`, `offermodel-4PS`),
            Btn(`Quest`, `offermodel-QUEST`),
            Btn(`ACC`, `offermodel-ACC`),
            Btn(`–°–º–µ—à–∞–Ω–Ω–∞—è`, `offermodel-—Å–º–µ—à–∞–Ω–Ω–∞—è`),
          ],
        },
        parse_mode: "Markdown",
      },
    );
  }

  private async model(user: User, model: string) {
    user.dialogueData += `–ú–æ–¥–µ–ª—å –æ—Ñ—Ñ–µ—Ä–∞: ${model}\n`;
    await manager.save(user);
    await this.bot.bot.sendMessage(
      +user.chatId,
      "–û—Ç–ª–∏—á–Ω–æ, —Å –º–æ–¥–µ–ª—å—é –æ—Ñ—Ñ–µ—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å.",
    );
    await wait(2);
    await this.dialogController.createDialog(user, 2); // TODO: SET ID FOR THE AGENT
  }
}
